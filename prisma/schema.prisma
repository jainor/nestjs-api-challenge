generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model categories {
  id          Int        @id @unique
  name        String     @db.VarChar
  description String?    @db.VarChar
  created_at  DateTime   @default(now())
  products    products[]
}

model products {
  id                  Int                   @id @unique
  name                String                @db.VarChar
  description         String?               @db.VarChar
  price               Decimal               @db.Decimal
  category_id         Int
  stock               Int                   @default(0)
  created_at          DateTime              @default(now())
  updated_at          DateTime              @default(now())
  categories          categories            @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "products_categories_id_fkey")
  shopping_cart_items shopping_cart_items[]
}

model shopping_cart_items {
  id             Int            @id @unique
  cart_id        Int
  product_id     Int
  amount         Int
  created_at     DateTime       @default(now())
  updated_at     DateTime       @default(now())
  shopping_carts shopping_carts @relation(fields: [cart_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "shopping_cart_items_carts_id_fkey")
  products       products       @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "shopping_cart_items_products_id_fkey")
}

model shopping_carts {
  id                  Int                   @id @unique
  user_id             Int
  created_at          DateTime              @default(now())
  updated_at          DateTime              @default(now())
  users               users                 @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "shopping_carts_users_id_fkey")
  shopping_cart_items shopping_cart_items[]
}

model users {
  id              Int              @id @unique
  email           String           @unique @db.VarChar
  password        String           @db.VarChar
  first_name      String           @db.VarChar
  last_name       String           @db.VarChar
  created_at      DateTime         @default(now())
  is_public_email Boolean          @default(true)
  is_verified     Boolean          @default(false)
  role            role_type        @default(user)
  shopping_carts  shopping_carts[]
}

enum role_type {
  user
  moderator
  admin
}
